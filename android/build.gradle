group 'io.flutter.plugins.videoplayer'
version '1.0-SNAPSHOT'
def args = ['-Xlint:deprecation', '-Xlint:unchecked', '-Werror']

buildscript {
    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://muxinc.jfrog.io/artifactory/default-maven-release-local'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.1'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://muxinc.jfrog.io/artifactory/default-maven-release-local'
        }
    }
}

project.getTasks().withType(JavaCompile) {
    options.compilerArgs.addAll(args)
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 24
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    lintOptions {
        checkAllWarnings true
        warningsAsErrors true
        disable 'AndroidGradlePluginVersion', 'InvalidPackage', 'GradleDependency'
        baseline file('lint-baseline.xml')
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dependencies {
        def exoplayer_version = '2.18.6'
        implementation "com.google.android.exoplayer:exoplayer-core:${exoplayer_version}"
        implementation "com.google.android.exoplayer:exoplayer-hls:${exoplayer_version}"
        implementation "com.google.android.exoplayer:exoplayer-dash:${exoplayer_version}"
        implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:${exoplayer_version}"
        api 'com.mux.stats.sdk.muxstats:MuxExoPlayer_r2_18_1:3.3.0'
        testImplementation 'junit:junit:4.13.2'
        testImplementation 'androidx.test:core:1.3.0'
        testImplementation 'org.mockito:mockito-inline:5.0.0'
          testImplementation 'org.robolectric:robolectric:4.10.3'
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}
